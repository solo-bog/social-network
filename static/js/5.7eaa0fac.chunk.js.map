{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css"],"names":["DialogItem","id","img","name","path","className","s","dialog","to","activeClassName","active","dialogImage","src","alt","dialogsInfo","Message","isMy","message","myMessage","messageText","AddMessageForm","props","onSubmit","text","addNewMessage","textMessage","handleSubmit","messagesInput","validate","required","placeholder","component","Textarea","type","Dialogs","dialogsPage","state","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","compose","withAuthRedirect","connect","dispatch","addMessage","mapStateToProps","isAuth","auth","Component","module","exports"],"mappings":"yMAceA,EAVI,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KACvBC,EAAI,mBAAeH,GACzB,OACE,eAAC,IAAD,CAASI,UAAWC,IAAEC,OAAQC,GAAIJ,EAAMK,gBAAiBH,IAAEI,OAA3D,UACE,qBAAKL,UAAWC,IAAEK,YAAlB,SAA+B,qBAAKC,IAAKV,EAAKW,IAAI,aAClD,qBAAKR,UAAWC,IAAEQ,YAAlB,SAA+B,+BAAOX,UCC7BY,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACd,sBAAKZ,UAAS,UAAKC,IAAEW,QAAP,YAAkBD,EAAOV,IAAEY,UAAY,IAArD,UACE,qBAAKN,IAAI,0IAA0IC,IAAI,SACvJ,qBAAKR,UAAWC,IAAEa,YAAlB,SAAgCF,Q,gBCE9BG,EAAiB,SAACC,GAItB,OACE,cAAC,IAAD,CAAMC,SAJc,SAACC,GACrBF,EAAMG,cAAcD,EAAKE,cAGzB,SACG,gBAAGC,EAAH,EAAGA,aAAH,OACC,uBAAMrB,UAAWC,IAAEqB,cAAeL,SAAUI,EAA5C,UACE,8BACE,cAAC,IAAD,CAAOE,SAAUC,IAAUC,YAAY,gBAAgB3B,KAAK,cAAc4B,UAAWC,QAEvF,8BACE,wBAAQC,KAAK,SAAb,2BA6BGC,EArBC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaX,EAAoB,EAApBA,cACxBY,EAAQD,EACRE,EAAkBD,EAAME,QAAQC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAYrC,KAAMqC,EAAErC,KAAiBF,GAAIuC,EAAEvC,GAAIC,IAAKsC,EAAEtC,KAAvBsC,EAAEvC,OAC5EwC,EAAmBL,EAAMM,SAASH,KAAI,SAACI,GAAD,OAAO,cAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,QAAoBhB,GAAI0C,EAAE1C,GAAIe,KAAM2B,EAAE3B,MAAxB2B,EAAE1C,OACvF,OACE,8BACE,sBAAKI,UAAWC,IAAEgC,QAAlB,UACE,qBAAKjC,UAAWC,IAAEsC,aAAlB,SACGP,IAEH,gCACE,qBAAKhC,UAAWC,IAAEoC,SAAlB,SAA6BD,IAC7B,8BACE,cAAC,EAAD,CAAgBjB,cAAeA,e,QC1B5BqB,sBACbC,IACAC,aAXsB,SAACX,GAAD,MAAY,CAClCD,YAAaC,EAAMD,gBAGM,SAACa,GAAD,MAAe,CACxCxB,cAAe,SAACD,GACdyB,EAASC,YAAW1B,SAGTsB,CAGbX,I,iECdIgB,EAAkB,SAACd,GAAD,MAAY,CAClCe,OAAQf,EAAMgB,KAAKD,SAWNL,IARU,SAACO,GAKxB,OAAON,YAAQG,EAARH,EAJgB,SAAC1B,GACtB,OAAKA,EAAM8B,OACJ,cAACE,EAAD,IADmB,cAAC,IAAD,CAAU7C,GAAG,gB,mBCT3C8C,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,YAAc,6BAA6B,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,yBAAyB,UAAY,2BAA2B,YAAc,6BAA6B,cAAgB","file":"static/js/5.7eaa0fac.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst DialogItem = ({ id, img, name }) => {\r\n  const path = `/dialogs/${id}`;\r\n  return (\r\n    <NavLink className={s.dialog} to={path} activeClassName={s.active}>\r\n      <div className={s.dialogImage}><img src={img} alt=\"avatar\" /></div>\r\n      <div className={s.dialogsInfo}><span>{name}</span></div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst Message = ({ isMy, message }) => (\r\n  <div className={`${s.message} ${isMy ? s.myMessage : ''}`}>\r\n    <img src=\"https://cdn.shopify.com/s/files/1/0045/5104/9304/t/27/assets/AC_ECOM_SITE_2020_REFRESH_1_INDEX_M2_THUMBS-V2-1.jpg?v=8913815134086573859\" alt=\"foto\" />\r\n    <div className={s.messageText}>{message}</div>\r\n  </div>\r\n);\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Field, Form } from 'react-final-form';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\n\r\nconst AddMessageForm = (props) => {\r\n  const addNewMessage = (text) => {\r\n    props.addNewMessage(text.textMessage);\r\n  };\r\n  return (\r\n    <Form onSubmit={addNewMessage}>\r\n      {({ handleSubmit }) => (\r\n        <form className={s.messagesInput} onSubmit={handleSubmit}>\r\n          <div>\r\n            <Field validate={required} placeholder=\"Enter text...\" name=\"textMessage\" component={Textarea} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">Send</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Dialogs = ({ dialogsPage, addNewMessage }) => {\r\n  const state = dialogsPage;\r\n  const dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id} img={d.img} />);\r\n  const messagesElements = state.messages.map((m) => <Message message={m.message} key={m.id} id={m.id} isMy={m.isMy} />);\r\n  return (\r\n    <div>\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n          {dialogsElements}\r\n        </div>\r\n        <div>\r\n          <div className={s.messages}>{messagesElements}</div>\r\n          <div>\r\n            <AddMessageForm addNewMessage={addNewMessage} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { addMessage } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dialogsPage: state.dialogsPage,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addNewMessage: (text) => {\r\n    dispatch(addMessage(text));\r\n  },\r\n});\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  const wrappComponent = (props) => {\r\n    if (!props.isAuth) return <Redirect to=\"/login\" />;\r\n    return <Component />;\r\n  };\r\n  return connect(mapStateToProps)(wrappComponent);\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__S0nSV\",\"dialogsItems\":\"Dialogs_dialogsItems__2mGt1\",\"dialog\":\"Dialogs_dialog__e-fNE\",\"active\":\"Dialogs_active__G_DeA\",\"dialogImage\":\"Dialogs_dialogImage__1JP85\",\"dialogsInfo\":\"Dialogs_dialogsInfo__2bIyR\",\"messages\":\"Dialogs_messages__2ITMS\",\"message\":\"Dialogs_message__3w7Hx\",\"myMessage\":\"Dialogs_myMessage__3YYGz\",\"messageText\":\"Dialogs_messageText__1Yxzl\",\"messagesInput\":\"Dialogs_messagesInput__Id-x5\"};"],"sourceRoot":""}